{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled67.ipynb",
      "provenance": [],
      "collapsed_sections": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "metadata": {
        "id": "WbpBdqgARdxM"
      },
      "source": [
        "{\n",
        "  \"nbformat\": 4,\n",
        "  \"nbformat_minor\": 0,\n",
        "  \"metadata\": {\n",
        "    \"colab\": {\n",
        "      \"name\": \"credit OpenML.ipynb\",\n",
        "      \"provenance\": [],\n",
        "      \"collapsed_sections\": []\n",
        "    },\n",
        "    \"kernelspec\": {\n",
        "      \"name\": \"python3\",\n",
        "      \"display_name\": \"Python 3\"\n",
        "    }\n",
        "  },\n",
        "  \"cells\": [\n",
        "    {\n",
        "      \"cell_type\": \"code\",\n",
        "      \"metadata\": {\n",
        "        \"id\": \"37qQSshhfeXx\",\n",
        "        \"outputId\": \"c620a84b-9677-4d69-c7b2-7f39cc2b7edb\",\n",
        "        \"colab\": {\n",
        "          \"base_uri\": \"https://localhost:8080/\"\n",
        "        }\n",
        "      },\n",
        "      \"source\": [\n",
        "        \"!pip install -i https://test.pypi.org/simple/ all-in-one-ml==0.0.3\"\n",
        "      ],\n",
        "      \"execution_count\": 37,\n",
        "      \"outputs\": [\n",
        "        {\n",
        "          \"output_type\": \"stream\",\n",
        "          \"text\": [\n",
        "            \"Looking in indexes: https://test.pypi.org/simple/\\n\",\n",
        "            \"Requirement already satisfied: all-in-one-ml==0.0.3 in /usr/local/lib/python3.6/dist-packages (0.0.3)\\n\",\n",
        "            \"Requirement already satisfied: matplotlib in /usr/local/lib/python3.6/dist-packages (from all-in-one-ml==0.0.3) (3.2.2)\\n\",\n",
        "            \"Requirement already satisfied: seaborn in /usr/local/lib/python3.6/dist-packages (from all-in-one-ml==0.0.3) (0.11.0)\\n\",\n",
        "            \"Requirement already satisfied: sklearn in /usr/local/lib/python3.6/dist-packages (from all-in-one-ml==0.0.3) (0.0)\\n\",\n",
        "            \"Requirement already satisfied: pandas in /usr/local/lib/python3.6/dist-packages (from all-in-one-ml==0.0.3) (1.1.3)\\n\",\n",
        "            \"Requirement already satisfied: keras in /usr/local/lib/python3.6/dist-packages (from all-in-one-ml==0.0.3) (2.4.3)\\n\",\n",
        "            \"Requirement already satisfied: numpy in /usr/local/lib/python3.6/dist-packages (from all-in-one-ml==0.0.3) (1.18.5)\\n\",\n",
        "            \"Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib->all-in-one-ml==0.0.3) (2.4.7)\\n\",\n",
        "            \"Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib->all-in-one-ml==0.0.3) (2.8.1)\\n\",\n",
        "            \"Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.6/dist-packages (from matplotlib->all-in-one-ml==0.0.3) (0.10.0)\\n\",\n",
        "            \"Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib->all-in-one-ml==0.0.3) (1.2.0)\\n\",\n",
        "            \"Requirement already satisfied: scipy>=1.0 in /usr/local/lib/python3.6/dist-packages (from seaborn->all-in-one-ml==0.0.3) (1.4.1)\\n\",\n",
        "            \"Requirement already satisfied: scikit-learn in /usr/local/lib/python3.6/dist-packages (from sklearn->all-in-one-ml==0.0.3) (0.22.2.post1)\\n\",\n",
        "            \"Requirement already satisfied: pytz>=2017.2 in /usr/local/lib/python3.6/dist-packages (from pandas->all-in-one-ml==0.0.3) (2018.9)\\n\",\n",
        "            \"Requirement already satisfied: h5py in /usr/local/lib/python3.6/dist-packages (from keras->all-in-one-ml==0.0.3) (2.10.0)\\n\",\n",
        "            \"Requirement already satisfied: pyyaml in /usr/local/lib/python3.6/dist-packages (from keras->all-in-one-ml==0.0.3) (3.13)\\n\",\n",
        "            \"Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.6/dist-packages (from python-dateutil>=2.1->matplotlib->all-in-one-ml==0.0.3) (1.15.0)\\n\",\n",
        "            \"Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.6/dist-packages (from scikit-learn->sklearn->all-in-one-ml==0.0.3) (0.17.0)\\n\"\n",
        "          ],\n",
        "          \"name\": \"stdout\"\n",
        "        }\n",
        "      ]\n",
        "    },\n",
        "    {\n",
        "      \"cell_type\": \"code\",\n",
        "      \"metadata\": {\n",
        "        \"id\": \"ml8MbuC5gx18\"\n",
        "      },\n",
        "      \"source\": [\n",
        "        \"from all_in_one_ml import beginner\\n\",\n",
        "        \"from sklearn import datasets\\n\",\n",
        "        \"import pandas as pd\"\n",
        "      ],\n",
        "      \"execution_count\": 38,\n",
        "      \"outputs\": []\n",
        "    },\n",
        "    {\n",
        "      \"cell_type\": \"code\",\n",
        "      \"metadata\": {\n",
        "        \"id\": \"umWGVnt1oMd7\"\n",
        "      },\n",
        "      \"source\": [\n",
        "        \"data = datasets.fetch_openml('credit-g')\"\n",
        "      ],\n",
        "      \"execution_count\": 39,\n",
        "      \"outputs\": []\n",
        "    },\n",
        "    {\n",
        "      \"cell_type\": \"code\",\n",
        "      \"metadata\": {\n",
        "        \"id\": \"AmgKpVoor65x\"\n",
        "      },\n",
        "      \"source\": [\n",
        "        \"df = pd.DataFrame(data.data,columns = data.feature_names)\\n\",\n",
        "        \"df['class'] = data.target\\n\"\n",
        "      ],\n",
        "      \"execution_count\": 40,\n",
        "      \"outputs\": []\n",
        "    },\n",
        "    {\n",
        "      \"cell_type\": \"code\",\n",
        "      \"metadata\": {\n",
        "        \"id\": \"OClnvuW3tSf7\",\n",
        "        \"outputId\": \"979f2ced-1737-4267-9fc0-00219ae66dea\",\n",
        "        \"colab\": {\n",
        "          \"base_uri\": \"https://localhost:8080/\",\n",
        "          \"height\": 222\n",
        "        }\n",
        "      },\n",
        "      \"source\": [\n",
        "        \"df.head()\"\n",
        "      ],\n",
        "      \"execution_count\": 41,\n",
        "      \"outputs\": [\n",
        "        {\n",
        "          \"output_type\": \"execute_result\",\n",
        "          \"data\": {\n",
        "            \"text/html\": [\n",
        "              \"<div>\\n\",\n",
        "              \"<style scoped>\\n\",\n",
        "              \"    .dataframe tbody tr th:only-of-type {\\n\",\n",
        "              \"        vertical-align: middle;\\n\",\n",
        "              \"    }\\n\",\n",
        "              \"\\n\",\n",
        "              \"    .dataframe tbody tr th {\\n\",\n",
        "              \"        vertical-align: top;\\n\",\n",
        "              \"    }\\n\",\n",
        "              \"\\n\",\n",
        "              \"    .dataframe thead th {\\n\",\n",
        "              \"        text-align: right;\\n\",\n",
        "              \"    }\\n\",\n",
        "              \"</style>\\n\",\n",
        "              \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\n",
        "              \"  <thead>\\n\",\n",
        "              \"    <tr style=\\\"text-align: right;\\\">\\n\",\n",
        "              \"      <th></th>\\n\",\n",
        "              \"      <th>checking_status</th>\\n\",\n",
        "              \"      <th>duration</th>\\n\",\n",
        "              \"      <th>credit_history</th>\\n\",\n",
        "              \"      <th>purpose</th>\\n\",\n",
        "              \"      <th>credit_amount</th>\\n\",\n",
        "              \"      <th>savings_status</th>\\n\",\n",
        "              \"      <th>employment</th>\\n\",\n",
        "              \"      <th>installment_commitment</th>\\n\",\n",
        "              \"      <th>personal_status</th>\\n\",\n",
        "              \"      <th>other_parties</th>\\n\",\n",
        "              \"      <th>residence_since</th>\\n\",\n",
        "              \"      <th>property_magnitude</th>\\n\",\n",
        "              \"      <th>age</th>\\n\",\n",
        "              \"      <th>other_payment_plans</th>\\n\",\n",
        "              \"      <th>housing</th>\\n\",\n",
        "              \"      <th>existing_credits</th>\\n\",\n",
        "              \"      <th>job</th>\\n\",\n",
        "              \"      <th>num_dependents</th>\\n\",\n",
        "              \"      <th>own_telephone</th>\\n\",\n",
        "              \"      <th>foreign_worker</th>\\n\",\n",
        "              \"      <th>class</th>\\n\",\n",
        "              \"    </tr>\\n\",\n",
        "              \"  </thead>\\n\",\n",
        "              \"  <tbody>\\n\",\n",
        "              \"    <tr>\\n\",\n",
        "              \"      <th>0</th>\\n\",\n",
        "              \"      <td>0.0</td>\\n\",\n",
        "              \"      <td>6.0</td>\\n\",\n",
        "              \"      <td>4.0</td>\\n\",\n",
        "              \"      <td>3.0</td>\\n\",\n",
        "              \"      <td>1169.0</td>\\n\",\n",
        "              \"      <td>4.0</td>\\n\",\n",
        "              \"      <td>4.0</td>\\n\",\n",
        "              \"      <td>4.0</td>\\n\",\n",
        "              \"      <td>2.0</td>\\n\",\n",
        "              \"      <td>0.0</td>\\n\",\n",
        "              \"      <td>4.0</td>\\n\",\n",
        "              \"      <td>0.0</td>\\n\",\n",
        "              \"      <td>67.0</td>\\n\",\n",
        "              \"      <td>2.0</td>\\n\",\n",
        "              \"      <td>1.0</td>\\n\",\n",
        "              \"      <td>2.0</td>\\n\",\n",
        "              \"      <td>2.0</td>\\n\",\n",
        "              \"      <td>1.0</td>\\n\",\n",
        "              \"      <td>1.0</td>\\n\",\n",
        "              \"      <td>0.0</td>\\n\",\n",
        "              \"      <td>good</td>\\n\",\n",
        "              \"    </tr>\\n\",\n",
        "              \"    <tr>\\n\",\n",
        "              \"      <th>1</th>\\n\",\n",
        "              \"      <td>1.0</td>\\n\",\n",
        "              \"      <td>48.0</td>\\n\",\n",
        "              \"      <td>2.0</td>\\n\",\n",
        "              \"      <td>3.0</td>\\n\",\n",
        "              \"      <td>5951.0</td>\\n\",\n",
        "              \"      <td>0.0</td>\\n\",\n",
        "              \"      <td>2.0</td>\\n\",\n",
        "              \"      <td>2.0</td>\\n\",\n",
        "              \"      <td>1.0</td>\\n\",\n",
        "              \"      <td>0.0</td>\\n\",\n",
        "              \"      <td>2.0</td>\\n\",\n",
        "              \"      <td>0.0</td>\\n\",\n",
        "              \"      <td>22.0</td>\\n\",\n",
        "              \"      <td>2.0</td>\\n\",\n",
        "              \"      <td>1.0</td>\\n\",\n",
        "              \"      <td>1.0</td>\\n\",\n",
        "              \"      <td>2.0</td>\\n\",\n",
        "              \"      <td>1.0</td>\\n\",\n",
        "              \"      <td>0.0</td>\\n\",\n",
        "              \"      <td>0.0</td>\\n\",\n",
        "              \"      <td>bad</td>\\n\",\n",
        "              \"    </tr>\\n\",\n",
        "              \"    <tr>\\n\",\n",
        "              \"      <th>2</th>\\n\",\n",
        "              \"      <td>3.0</td>\\n\",\n",
        "              \"      <td>12.0</td>\\n\",\n",
        "              \"      <td>4.0</td>\\n\",\n",
        "              \"      <td>6.0</td>\\n\",\n",
        "              \"      <td>2096.0</td>\\n\",\n",
        "              \"      <td>0.0</td>\\n\",\n",
        "              \"      <td>3.0</td>\\n\",\n",
        "              \"      <td>2.0</td>\\n\",\n",
        "              \"      <td>2.0</td>\\n\",\n",
        "              \"      <td>0.0</td>\\n\",\n",
        "              \"      <td>3.0</td>\\n\",\n",
        "              \"      <td>0.0</td>\\n\",\n",
        "              \"      <td>49.0</td>\\n\",\n",
        "              \"      <td>2.0</td>\\n\",\n",
        "              \"      <td>1.0</td>\\n\",\n",
        "              \"      <td>1.0</td>\\n\",\n",
        "              \"      <td>1.0</td>\\n\",\n",
        "              \"      <td>2.0</td>\\n\",\n",
        "              \"      <td>0.0</td>\\n\",\n",
        "              \"      <td>0.0</td>\\n\",\n",
        "              \"      <td>good</td>\\n\",\n",
        "              \"    </tr>\\n\",\n",
        "              \"    <tr>\\n\",\n",
        "              \"      <th>3</th>\\n\",\n",
        "              \"      <td>0.0</td>\\n\",\n",
        "              \"      <td>42.0</td>\\n\",\n",
        "              \"      <td>2.0</td>\\n\",\n",
        "              \"      <td>2.0</td>\\n\",\n",
        "              \"      <td>7882.0</td>\\n\",\n",
        "              \"      <td>0.0</td>\\n\",\n",
        "              \"      <td>3.0</td>\\n\",\n",
        "              \"      <td>2.0</td>\\n\",\n",
        "              \"      <td>2.0</td>\\n\",\n",
        "              \"      <td>2.0</td>\\n\",\n",
        "              \"      <td>4.0</td>\\n\",\n",
        "              \"      <td>1.0</td>\\n\",\n",
        "              \"      <td>45.0</td>\\n\",\n",
        "              \"      <td>2.0</td>\\n\",\n",
        "              \"      <td>2.0</td>\\n\",\n",
        "              \"      <td>1.0</td>\\n\",\n",
        "              \"      <td>2.0</td>\\n\",\n",
        "              \"      <td>2.0</td>\\n\",\n",
        "              \"      <td>0.0</td>\\n\",\n",
        "              \"      <td>0.0</td>\\n\",\n",
        "              \"      <td>good</td>\\n\",\n",
        "              \"    </tr>\\n\",\n",
        "              \"    <tr>\\n\",\n",
        "              \"      <th>4</th>\\n\",\n",
        "              \"      <td>0.0</td>\\n\",\n",
        "              \"      <td>24.0</td>\\n\",\n",
        "              \"      <td>3.0</td>\\n\",\n",
        "              \"      <td>0.0</td>\\n\",\n",
        "              \"      <td>4870.0</td>\\n\",\n",
        "              \"      <td>0.0</td>\\n\",\n",
        "              \"      <td>2.0</td>\\n\",\n",
        "              \"      <td>3.0</td>\\n\",\n",
        "              \"      <td>2.0</td>\\n\",\n",
        "              \"      <td>0.0</td>\\n\",\n",
        "              \"      <td>4.0</td>\\n\",\n",
        "              \"      <td>3.0</td>\\n\",\n",
        "              \"      <td>53.0</td>\\n\",\n",
        "              \"      <td>2.0</td>\\n\",\n",
        "              \"      <td>2.0</td>\\n\",\n",
        "              \"      <td>2.0</td>\\n\",\n",
        "              \"      <td>2.0</td>\\n\",\n",
        "              \"      <td>2.0</td>\\n\",\n",
        "              \"      <td>0.0</td>\\n\",\n",
        "              \"      <td>0.0</td>\\n\",\n",
        "              \"      <td>bad</td>\\n\",\n",
        "              \"    </tr>\\n\",\n",
        "              \"  </tbody>\\n\",\n",
        "              \"</table>\\n\",\n",
        "              \"</div>\"\n",
        "            ],\n",
        "            \"text/plain\": [\n",
        "              \"   checking_status  duration  ...  foreign_worker  class\\n\",\n",
        "              \"0              0.0       6.0  ...             0.0   good\\n\",\n",
        "              \"1              1.0      48.0  ...             0.0    bad\\n\",\n",
        "              \"2              3.0      12.0  ...             0.0   good\\n\",\n",
        "              \"3              0.0      42.0  ...             0.0   good\\n\",\n",
        "              \"4              0.0      24.0  ...             0.0    bad\\n\",\n",
        "              \"\\n\",\n",
        "              \"[5 rows x 21 columns]\"\n",
        "            ]\n",
        "          },\n",
        "          \"metadata\": {\n",
        "            \"tags\": []\n",
        "          },\n",
        "          \"execution_count\": 41\n",
        "        }\n",
        "      ]\n",
        "    },\n",
        "    {\n",
        "      \"cell_type\": \"code\",\n",
        "      \"metadata\": {\n",
        "        \"id\": \"4sCHISIbtkqV\"\n",
        "      },\n",
        "      \"source\": [\n",
        "        \"x = df.drop(columns=['class'])\\n\",\n",
        "        \"y = df['class']\"\n",
        "      ],\n",
        "      \"execution_count\": 42,\n",
        "      \"outputs\": []\n",
        "    },\n",
        "    {\n",
        "      \"cell_type\": \"code\",\n",
        "      \"metadata\": {\n",
        "        \"id\": \"prY8p-M_kSp2\",\n",
        "        \"outputId\": \"40ecff8a-f88c-46d5-a1bc-c5db7fc00276\",\n",
        "        \"colab\": {\n",
        "          \"base_uri\": \"https://localhost:8080/\"\n",
        "        }\n",
        "      },\n",
        "      \"source\": [\n",
        "        \"x_hot,y_hot = beginner.one_hot(x,y,cat='~')\\n\",\n",
        "        \"print(x_hot,y_hot)\"\n",
        "      ],\n",
        "      \"execution_count\": 43,\n",
        "      \"outputs\": [\n",
        "        {\n",
        "          \"output_type\": \"stream\",\n",
        "          \"text\": [\n",
        "            \"     checking_status_0.0  ...  foreign_worker_1.0\\n\",\n",
        "            \"0                      1  ...                   0\\n\",\n",
        "            \"1                      0  ...                   0\\n\",\n",
        "            \"2                      0  ...                   0\\n\",\n",
        "            \"3                      1  ...                   0\\n\",\n",
        "            \"4                      1  ...                   0\\n\",\n",
        "            \"..                   ...  ...                 ...\\n\",\n",
        "            \"995                    0  ...                   0\\n\",\n",
        "            \"996                    1  ...                   0\\n\",\n",
        "            \"997                    0  ...                   0\\n\",\n",
        "            \"998                    1  ...                   0\\n\",\n",
        "            \"999                    0  ...                   0\\n\",\n",
        "            \"\\n\",\n",
        "            \"[1000 rows x 1075 columns]      bad  good\\n\",\n",
        "            \"0      0     1\\n\",\n",
        "            \"1      1     0\\n\",\n",
        "            \"2      0     1\\n\",\n",
        "            \"3      0     1\\n\",\n",
        "            \"4      1     0\\n\",\n",
        "            \"..   ...   ...\\n\",\n",
        "            \"995    0     1\\n\",\n",
        "            \"996    0     1\\n\",\n",
        "            \"997    0     1\\n\",\n",
        "            \"998    1     0\\n\",\n",
        "            \"999    0     1\\n\",\n",
        "            \"\\n\",\n",
        "            \"[1000 rows x 2 columns]\\n\"\n",
        "          ],\n",
        "          \"name\": \"stdout\"\n",
        "        }\n",
        "      ]\n",
        "    },\n",
        "    {\n",
        "      \"cell_type\": \"code\",\n",
        "      \"metadata\": {\n",
        "        \"id\": \"Bi7EqujclEPp\",\n",
        "        \"outputId\": \"6a0ed875-6d07-4981-e25c-5db0041c7dbb\",\n",
        "        \"colab\": {\n",
        "          \"base_uri\": \"https://localhost:8080/\"\n",
        "        }\n",
        "      },\n",
        "      \"source\": [\n",
        "        \"x_train,x_test,y_train,y_test = beginner.split_dataset(x_hot,y_hot,0.2,8)\"\n",
        "      ],\n",
        "      \"execution_count\": 44,\n",
        "      \"outputs\": [\n",
        "        {\n",
        "          \"output_type\": \"stream\",\n",
        "          \"text\": [\n",
        "            \"(800, 1075) (800, 2) (200, 1075) (200, 2)\\n\"\n",
        "          ],\n",
        "          \"name\": \"stdout\"\n",
        "        }\n",
        "      ]\n",
        "    },\n",
        "    {\n",
        "      \"cell_type\": \"code\",\n",
        "      \"metadata\": {\n",
        "        \"id\": \"u2sDazVOlP0o\",\n",
        "        \"outputId\": \"58a62c25-5b67-4e65-8e7d-575980fc26b8\",\n",
        "        \"colab\": {\n",
        "          \"base_uri\": \"https://localhost:8080/\",\n",
        "          \"height\": 251\n",
        "        }\n",
        "      },\n",
        "      \"source\": [\n",
        "        \"x_train.head()\"\n",
        "      ],\n",
        "      \"execution_count\": 45,\n",
        "      \"outputs\": [\n",
        "        {\n",
        "          \"output_type\": \"execute_result\",\n",
        "          \"data\": {\n",
        "            \"text/html\": [\n",
        "              \"<div>\\n\",\n",
        "              \"<style scoped>\\n\",\n",
        "              \"    .dataframe tbody tr th:only-of-type {\\n\",\n",
        "              \"        vertical-align: middle;\\n\",\n",
        "              \"    }\\n\",\n",
        "              \"\\n\",\n",
        "              \"    .dataframe tbody tr th {\\n\",\n",
        "              \"        vertical-align: top;\\n\",\n",
        "              \"    }\\n\",\n",
        "              \"\\n\",\n",
        "              \"    .dataframe thead th {\\n\",\n",
        "              \"        text-align: right;\\n\",\n",
        "              \"    }\\n\",\n",
        "              \"</style>\\n\",\n",
        "              \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\n",
        "              \"  <thead>\\n\",\n",
        "              \"    <tr style=\\\"text-align: right;\\\">\\n\",\n",
        "              \"      <th></th>\\n\",\n",
        "              \"      <th>checking_status_0.0</th>\\n\",\n",
        "              \"      <th>checking_status_1.0</th>\\n\",\n",
        "              \"      <th>checking_status_2.0</th>\\n\",\n",
        "              \"      <th>checking_status_3.0</th>\\n\",\n",
        "              \"      <th>duration_4.0</th>\\n\",\n",
        "              \"      <th>duration_5.0</th>\\n\",\n",
        "              \"      <th>duration_6.0</th>\\n\",\n",
        "              \"      <th>duration_7.0</th>\\n\",\n",
        "              \"      <th>duration_8.0</th>\\n\",\n",
        "              \"      <th>duration_9.0</th>\\n\",\n",
        "              \"      <th>duration_10.0</th>\\n\",\n",
        "              \"      <th>duration_11.0</th>\\n\",\n",
        "              \"      <th>duration_12.0</th>\\n\",\n",
        "              \"      <th>duration_13.0</th>\\n\",\n",
        "              \"      <th>duration_14.0</th>\\n\",\n",
        "              \"      <th>duration_15.0</th>\\n\",\n",
        "              \"      <th>duration_16.0</th>\\n\",\n",
        "              \"      <th>duration_18.0</th>\\n\",\n",
        "              \"      <th>duration_20.0</th>\\n\",\n",
        "              \"      <th>duration_21.0</th>\\n\",\n",
        "              \"      <th>duration_22.0</th>\\n\",\n",
        "              \"      <th>duration_24.0</th>\\n\",\n",
        "              \"      <th>duration_26.0</th>\\n\",\n",
        "              \"      <th>duration_27.0</th>\\n\",\n",
        "              \"      <th>duration_28.0</th>\\n\",\n",
        "              \"      <th>duration_30.0</th>\\n\",\n",
        "              \"      <th>duration_33.0</th>\\n\",\n",
        "              \"      <th>duration_36.0</th>\\n\",\n",
        "              \"      <th>duration_39.0</th>\\n\",\n",
        "              \"      <th>duration_40.0</th>\\n\",\n",
        "              \"      <th>duration_42.0</th>\\n\",\n",
        "              \"      <th>duration_45.0</th>\\n\",\n",
        "              \"      <th>duration_47.0</th>\\n\",\n",
        "              \"      <th>duration_48.0</th>\\n\",\n",
        "              \"      <th>duration_54.0</th>\\n\",\n",
        "              \"      <th>duration_60.0</th>\\n\",\n",
        "              \"      <th>duration_72.0</th>\\n\",\n",
        "              \"      <th>credit_history_0.0</th>\\n\",\n",
        "              \"      <th>credit_history_1.0</th>\\n\",\n",
        "              \"      <th>credit_history_2.0</th>\\n\",\n",
        "              \"      <th>...</th>\\n\",\n",
        "              \"      <th>age_52.0</th>\\n\",\n",
        "              \"      <th>age_53.0</th>\\n\",\n",
        "              \"      <th>age_54.0</th>\\n\",\n",
        "              \"      <th>age_55.0</th>\\n\",\n",
        "              \"      <th>age_56.0</th>\\n\",\n",
        "              \"      <th>age_57.0</th>\\n\",\n",
        "              \"      <th>age_58.0</th>\\n\",\n",
        "              \"      <th>age_59.0</th>\\n\",\n",
        "              \"      <th>age_60.0</th>\\n\",\n",
        "              \"      <th>age_61.0</th>\\n\",\n",
        "              \"      <th>age_62.0</th>\\n\",\n",
        "              \"      <th>age_63.0</th>\\n\",\n",
        "              \"      <th>age_64.0</th>\\n\",\n",
        "              \"      <th>age_65.0</th>\\n\",\n",
        "              \"      <th>age_66.0</th>\\n\",\n",
        "              \"      <th>age_67.0</th>\\n\",\n",
        "              \"      <th>age_68.0</th>\\n\",\n",
        "              \"      <th>age_70.0</th>\\n\",\n",
        "              \"      <th>age_74.0</th>\\n\",\n",
        "              \"      <th>age_75.0</th>\\n\",\n",
        "              \"      <th>other_payment_plans_0.0</th>\\n\",\n",
        "              \"      <th>other_payment_plans_1.0</th>\\n\",\n",
        "              \"      <th>other_payment_plans_2.0</th>\\n\",\n",
        "              \"      <th>housing_0.0</th>\\n\",\n",
        "              \"      <th>housing_1.0</th>\\n\",\n",
        "              \"      <th>housing_2.0</th>\\n\",\n",
        "              \"      <th>existing_credits_1.0</th>\\n\",\n",
        "              \"      <th>existing_credits_2.0</th>\\n\",\n",
        "              \"      <th>existing_credits_3.0</th>\\n\",\n",
        "              \"      <th>existing_credits_4.0</th>\\n\",\n",
        "              \"      <th>job_0.0</th>\\n\",\n",
        "              \"      <th>job_1.0</th>\\n\",\n",
        "              \"      <th>job_2.0</th>\\n\",\n",
        "              \"      <th>job_3.0</th>\\n\",\n",
        "              \"      <th>num_dependents_1.0</th>\\n\",\n",
        "              \"      <th>num_dependents_2.0</th>\\n\",\n",
        "              \"      <th>own_telephone_0.0</th>\\n\",\n",
        "              \"      <th>own_telephone_1.0</th>\\n\",\n",
        "              \"      <th>foreign_worker_0.0</th>\\n\",\n",
        "              \"      <th>foreign_worker_1.0</th>\\n\",\n",
        "              \"    </tr>\\n\",\n",
        "              \"  </thead>\\n\",\n",
        "              \"  <tbody>\\n\",\n",
        "              \"    <tr>\\n\",\n",
        "              \"      <th>578</th>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>...</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"    </tr>\\n\",\n",
        "              \"    <tr>\\n\",\n",
        "              \"      <th>66</th>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>...</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"    </tr>\\n\",\n",
        "              \"    <tr>\\n\",\n",
        "              \"      <th>39</th>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>...</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"    </tr>\\n\",\n",
        "              \"    <tr>\\n\",\n",
        "              \"      <th>302</th>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>...</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"    </tr>\\n\",\n",
        "              \"    <tr>\\n\",\n",
        "              \"      <th>974</th>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>...</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"    </tr>\\n\",\n",
        "              \"  </tbody>\\n\",\n",
        "              \"</table>\\n\",\n",
        "              \"<p>5 rows × 1075 columns</p>\\n\",\n",
        "              \"</div>\"\n",
        "            ],\n",
        "            \"text/plain\": [\n",
        "              \"     checking_status_0.0  ...  foreign_worker_1.0\\n\",\n",
        "              \"578                    0  ...                   0\\n\",\n",
        "              \"66                     0  ...                   0\\n\",\n",
        "              \"39                     0  ...                   0\\n\",\n",
        "              \"302                    0  ...                   0\\n\",\n",
        "              \"974                    0  ...                   0\\n\",\n",
        "              \"\\n\",\n",
        "              \"[5 rows x 1075 columns]\"\n",
        "            ]\n",
        "          },\n",
        "          \"metadata\": {\n",
        "            \"tags\": []\n",
        "          },\n",
        "          \"execution_count\": 45\n",
        "        }\n",
        "      ]\n",
        "    },\n",
        "    {\n",
        "      \"cell_type\": \"code\",\n",
        "      \"metadata\": {\n",
        "        \"id\": \"ThF2tyIAlQY7\",\n",
        "        \"outputId\": \"0d4320ec-84ab-4d13-edb4-cd73ede76fe6\",\n",
        "        \"colab\": {\n",
        "          \"base_uri\": \"https://localhost:8080/\",\n",
        "          \"height\": 202\n",
        "        }\n",
        "      },\n",
        "      \"source\": [\n",
        "        \"y_train.head()\"\n",
        "      ],\n",
        "      \"execution_count\": 46,\n",
        "      \"outputs\": [\n",
        "        {\n",
        "          \"output_type\": \"execute_result\",\n",
        "          \"data\": {\n",
        "            \"text/html\": [\n",
        "              \"<div>\\n\",\n",
        "              \"<style scoped>\\n\",\n",
        "              \"    .dataframe tbody tr th:only-of-type {\\n\",\n",
        "              \"        vertical-align: middle;\\n\",\n",
        "              \"    }\\n\",\n",
        "              \"\\n\",\n",
        "              \"    .dataframe tbody tr th {\\n\",\n",
        "              \"        vertical-align: top;\\n\",\n",
        "              \"    }\\n\",\n",
        "              \"\\n\",\n",
        "              \"    .dataframe thead th {\\n\",\n",
        "              \"        text-align: right;\\n\",\n",
        "              \"    }\\n\",\n",
        "              \"</style>\\n\",\n",
        "              \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\n",
        "              \"  <thead>\\n\",\n",
        "              \"    <tr style=\\\"text-align: right;\\\">\\n\",\n",
        "              \"      <th></th>\\n\",\n",
        "              \"      <th>bad</th>\\n\",\n",
        "              \"      <th>good</th>\\n\",\n",
        "              \"    </tr>\\n\",\n",
        "              \"  </thead>\\n\",\n",
        "              \"  <tbody>\\n\",\n",
        "              \"    <tr>\\n\",\n",
        "              \"      <th>578</th>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"    </tr>\\n\",\n",
        "              \"    <tr>\\n\",\n",
        "              \"      <th>66</th>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"    </tr>\\n\",\n",
        "              \"    <tr>\\n\",\n",
        "              \"      <th>39</th>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"    </tr>\\n\",\n",
        "              \"    <tr>\\n\",\n",
        "              \"      <th>302</th>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"    </tr>\\n\",\n",
        "              \"    <tr>\\n\",\n",
        "              \"      <th>974</th>\\n\",\n",
        "              \"      <td>0</td>\\n\",\n",
        "              \"      <td>1</td>\\n\",\n",
        "              \"    </tr>\\n\",\n",
        "              \"  </tbody>\\n\",\n",
        "              \"</table>\\n\",\n",
        "              \"</div>\"\n",
        "            ],\n",
        "            \"text/plain\": [\n",
        "              \"     bad  good\\n\",\n",
        "              \"578    1     0\\n\",\n",
        "              \"66     0     1\\n\",\n",
        "              \"39     0     1\\n\",\n",
        "              \"302    1     0\\n\",\n",
        "              \"974    0     1\"\n",
        "            ]\n",
        "          },\n",
        "          \"metadata\": {\n",
        "            \"tags\": []\n",
        "          },\n",
        "          \"execution_count\": 46\n",
        "        }\n",
        "      ]\n",
        "    },\n",
        "    {\n",
        "      \"cell_type\": \"code\",\n",
        "      \"metadata\": {\n",
        "        \"id\": \"GSOINIB3lT3N\",\n",
        "        \"outputId\": \"3f571d35-2f60-47d4-e9d2-96a5cad687a3\",\n",
        "        \"colab\": {\n",
        "          \"base_uri\": \"https://localhost:8080/\"\n",
        "        }\n",
        "      },\n",
        "      \"source\": [\n",
        "        \"model,history = beginner.build_compile_fit_model(x_train,y_train,'classification',30,3,[100,100,100],['relu','relu','relu'])\"\n",
        "      ],\n",
        "      \"execution_count\": 47,\n",
        "      \"outputs\": [\n",
        "        {\n",
        "          \"output_type\": \"stream\",\n",
        "          \"text\": [\n",
        "            \"Model: \\\"sequential_2\\\"\\n\",\n",
        "            \"_________________________________________________________________\\n\",\n",
        "            \"Layer (type)                 Output Shape              Param #   \\n\",\n",
        "            \"=================================================================\\n\",\n",
        "            \"dense_8 (Dense)              (None, 100)               107600    \\n\",\n",
        "            \"_________________________________________________________________\\n\",\n",
        "            \"dense_9 (Dense)              (None, 100)               10100     \\n\",\n",
        "            \"_________________________________________________________________\\n\",\n",
        "            \"dense_10 (Dense)             (None, 100)               10100     \\n\",\n",
        "            \"_________________________________________________________________\\n\",\n",
        "            \"dense_11 (Dense)             (None, 2)                 202       \\n\",\n",
        "            \"=================================================================\\n\",\n",
        "            \"Total params: 128,002\\n\",\n",
        "            \"Trainable params: 128,002\\n\",\n",
        "            \"Non-trainable params: 0\\n\",\n",
        "            \"_________________________________________________________________\\n\",\n",
        "            \"Epoch 1/30\\n\",\n",
        "            \"20/20 [==============================] - 0s 18ms/step - loss: 0.6082 - accuracy: 0.6750 - val_loss: 0.5893 - val_accuracy: 0.7063\\n\",\n",
        "            \"Epoch 2/30\\n\",\n",
        "            \"20/20 [==============================] - 0s 4ms/step - loss: 0.5310 - accuracy: 0.7031 - val_loss: 0.5479 - val_accuracy: 0.7063\\n\",\n",
        "            \"Epoch 3/30\\n\",\n",
        "            \"20/20 [==============================] - 0s 3ms/step - loss: 0.4419 - accuracy: 0.7891 - val_loss: 0.5455 - val_accuracy: 0.7437\\n\",\n",
        "            \"Epoch 4/30\\n\",\n",
        "            \"20/20 [==============================] - 0s 3ms/step - loss: 0.3262 - accuracy: 0.8687 - val_loss: 0.5795 - val_accuracy: 0.7312\\n\",\n",
        "            \"Epoch 5/30\\n\",\n",
        "            \"20/20 [==============================] - 0s 4ms/step - loss: 0.2101 - accuracy: 0.9328 - val_loss: 0.6868 - val_accuracy: 0.7375\\n\",\n",
        "            \"Epoch 6/30\\n\",\n",
        "            \"20/20 [==============================] - 0s 3ms/step - loss: 0.0890 - accuracy: 0.9781 - val_loss: 0.8412 - val_accuracy: 0.7000\\n\",\n",
        "            \"Epoch 7/30\\n\",\n",
        "            \"20/20 [==============================] - 0s 3ms/step - loss: 0.0287 - accuracy: 0.9953 - val_loss: 0.9746 - val_accuracy: 0.6938\\n\",\n",
        "            \"Epoch 8/30\\n\",\n",
        "            \"20/20 [==============================] - 0s 3ms/step - loss: 0.0095 - accuracy: 0.9984 - val_loss: 1.1010 - val_accuracy: 0.7125\\n\",\n",
        "            \"Epoch 9/30\\n\",\n",
        "            \"20/20 [==============================] - 0s 3ms/step - loss: 0.0029 - accuracy: 1.0000 - val_loss: 1.1568 - val_accuracy: 0.7188\\n\",\n",
        "            \"Epoch 10/30\\n\",\n",
        "            \"20/20 [==============================] - 0s 3ms/step - loss: 0.0013 - accuracy: 1.0000 - val_loss: 1.2432 - val_accuracy: 0.7188\\n\",\n",
        "            \"Epoch 11/30\\n\",\n",
        "            \"20/20 [==============================] - 0s 3ms/step - loss: 9.1484e-04 - accuracy: 1.0000 - val_loss: 1.2634 - val_accuracy: 0.7188\\n\",\n",
        "            \"Epoch 12/30\\n\",\n",
        "            \"20/20 [==============================] - 0s 4ms/step - loss: 6.7299e-04 - accuracy: 1.0000 - val_loss: 1.2929 - val_accuracy: 0.7188\\n\",\n",
        "            \"Epoch 13/30\\n\",\n",
        "            \"20/20 [==============================] - 0s 3ms/step - loss: 5.3078e-04 - accuracy: 1.0000 - val_loss: 1.3170 - val_accuracy: 0.7188\\n\",\n",
        "            \"Epoch 14/30\\n\",\n",
        "            \"20/20 [==============================] - 0s 3ms/step - loss: 4.2779e-04 - accuracy: 1.0000 - val_loss: 1.3478 - val_accuracy: 0.7188\\n\",\n",
        "            \"Epoch 15/30\\n\",\n",
        "            \"20/20 [==============================] - 0s 3ms/step - loss: 3.5370e-04 - accuracy: 1.0000 - val_loss: 1.3726 - val_accuracy: 0.7188\\n\",\n",
        "            \"Epoch 16/30\\n\",\n",
        "            \"20/20 [==============================] - 0s 4ms/step - loss: 2.9448e-04 - accuracy: 1.0000 - val_loss: 1.3869 - val_accuracy: 0.7125\\n\",\n",
        "            \"Epoch 17/30\\n\",\n",
        "            \"20/20 [==============================] - 0s 3ms/step - loss: 2.4807e-04 - accuracy: 1.0000 - val_loss: 1.4187 - val_accuracy: 0.7188\\n\",\n",
        "            \"Epoch 18/30\\n\",\n",
        "            \"20/20 [==============================] - 0s 3ms/step - loss: 2.0882e-04 - accuracy: 1.0000 - val_loss: 1.4353 - val_accuracy: 0.7125\\n\",\n",
        "            \"Epoch 19/30\\n\",\n",
        "            \"20/20 [==============================] - 0s 3ms/step - loss: 1.7843e-04 - accuracy: 1.0000 - val_loss: 1.4552 - val_accuracy: 0.7125\\n\",\n",
        "            \"Epoch 20/30\\n\",\n",
        "            \"20/20 [==============================] - 0s 3ms/step - loss: 1.5165e-04 - accuracy: 1.0000 - val_loss: 1.4770 - val_accuracy: 0.7125\\n\",\n",
        "            \"Epoch 21/30\\n\",\n",
        "            \"20/20 [==============================] - 0s 4ms/step - loss: 1.3034e-04 - accuracy: 1.0000 - val_loss: 1.4987 - val_accuracy: 0.7125\\n\",\n",
        "            \"Epoch 22/30\\n\",\n",
        "            \"20/20 [==============================] - 0s 3ms/step - loss: 1.1278e-04 - accuracy: 1.0000 - val_loss: 1.5216 - val_accuracy: 0.7125\\n\",\n",
        "            \"Epoch 23/30\\n\",\n",
        "            \"20/20 [==============================] - 0s 3ms/step - loss: 9.7567e-05 - accuracy: 1.0000 - val_loss: 1.5376 - val_accuracy: 0.7125\\n\",\n",
        "            \"Epoch 24/30\\n\",\n",
        "            \"20/20 [==============================] - 0s 3ms/step - loss: 8.5148e-05 - accuracy: 1.0000 - val_loss: 1.5572 - val_accuracy: 0.7125\\n\",\n",
        "            \"Epoch 25/30\\n\",\n",
        "            \"20/20 [==============================] - 0s 3ms/step - loss: 7.4666e-05 - accuracy: 1.0000 - val_loss: 1.5803 - val_accuracy: 0.7125\\n\",\n",
        "            \"Epoch 26/30\\n\",\n",
        "            \"20/20 [==============================] - 0s 3ms/step - loss: 6.5429e-05 - accuracy: 1.0000 - val_loss: 1.5923 - val_accuracy: 0.7125\\n\",\n",
        "            \"Epoch 27/30\\n\",\n",
        "            \"20/20 [==============================] - 0s 3ms/step - loss: 5.8485e-05 - accuracy: 1.0000 - val_loss: 1.6136 - val_accuracy: 0.7125\\n\",\n",
        "            \"Epoch 28/30\\n\",\n",
        "            \"20/20 [==============================] - 0s 3ms/step - loss: 5.1425e-05 - accuracy: 1.0000 - val_loss: 1.6263 - val_accuracy: 0.7125\\n\",\n",
        "            \"Epoch 29/30\\n\",\n",
        "            \"20/20 [==============================] - 0s 3ms/step - loss: 4.5782e-05 - accuracy: 1.0000 - val_loss: 1.6444 - val_accuracy: 0.7125\\n\",\n",
        "            \"Epoch 30/30\\n\",\n",
        "            \"20/20 [==============================] - 0s 3ms/step - loss: 4.1280e-05 - accuracy: 1.0000 - val_loss: 1.6652 - val_accuracy: 0.7125\\n\"\n",
        "          ],\n",
        "          \"name\": \"stdout\"\n",
        "        }\n",
        "      ]\n",
        "    },\n",
        "    {\n",
        "      \"cell_type\": \"code\",\n",
        "      \"metadata\": {\n",
        "        \"id\": \"54fMbUdcllD6\",\n",
        "        \"outputId\": \"5dd99113-0d4b-414a-995f-39c67ea84e83\",\n",
        "        \"colab\": {\n",
        "          \"base_uri\": \"https://localhost:8080/\"\n",
        "        }\n",
        "      },\n",
        "      \"source\": [\n",
        "        \"beginner.get_accuracy(x_test,y_test,model)\"\n",
        "      ],\n",
        "      \"execution_count\": 48,\n",
        "      \"outputs\": [\n",
        "        {\n",
        "          \"output_type\": \"stream\",\n",
        "          \"text\": [\n",
        "            \"7/7 [==============================] - 0s 2ms/step - loss: 1.3876 - accuracy: 0.7350\\n\"\n",
        "          ],\n",
        "          \"name\": \"stdout\"\n",
        "        }\n",
        "      ]\n",
        "    },\n",
        "    {\n",
        "      \"cell_type\": \"code\",\n",
        "      \"metadata\": {\n",
        "        \"id\": \"KgB2aWjBlwZX\",\n",
        "        \"outputId\": \"223df5ab-39d6-4f56-d6a8-376e8307fe7c\",\n",
        "        \"colab\": {\n",
        "          \"base_uri\": \"https://localhost:8080/\",\n",
        "          \"height\": 295\n",
        "        }\n",
        "      },\n",
        "      \"source\": [\n",
        "        \"beginner.accuracy_vs_valaccuracy(model,history,30)\"\n",
        "      ],\n",
        "      \"execution_count\": 49,\n",
        "      \"outputs\": [\n",
        "        {\n",
        "          \"output_type\": \"display_data\",\n",
        "          \"data\": {\n",
        "            \"image/png\": \"\\n\",\n",
        "            \"text/plain\": [\n",
        "              \"<Figure size 432x288 with 1 Axes>\"\n",
        "            ]\n",
        "          },\n",
        "          \"metadata\": {\n",
        "            \"tags\": [],\n",
        "            \"needs_background\": \"light\"\n",
        "          }\n",
        "        }\n",
        "      ]\n",
        "    },\n",
        "    {\n",
        "      \"cell_type\": \"code\",\n",
        "      \"metadata\": {\n",
        "        \"id\": \"PVkSCyqGlwTE\",\n",
        "        \"outputId\": \"afe142ca-a231-4f4e-e295-9a6ddf1bb2d6\",\n",
        "        \"colab\": {\n",
        "          \"base_uri\": \"https://localhost:8080/\",\n",
        "          \"height\": 295\n",
        "        }\n",
        "      },\n",
        "      \"source\": [\n",
        "        \"beginner.loss_vs_valloss(model,history,30)\"\n",
        "      ],\n",
        "      \"execution_count\": 50,\n",
        "      \"outputs\": [\n",
        "        {\n",
        "          \"output_type\": \"display_data\",\n",
        "          \"data\": {\n",
        "            \"image/png\": \"\\n\",\n",
        "            \"text/plain\": [\n",
        "              \"<Figure size 432x288 with 1 Axes>\"\n",
        "            ]\n",
        "          },\n",
        "          \"metadata\": {\n",
        "            \"tags\": [],\n",
        "            \"needs_background\": \"light\"\n",
        "          }\n",
        "        }\n",
        "      ]\n",
        "    }\n",
        "  ]\n",
        "}"
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}